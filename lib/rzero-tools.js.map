{"version":3,"sources":["../src/rzero-tools.js"],"names":["UseStore","buildBase","RZeroWrapper","store","path","propName","Class","_Class","Symbol","for","Object","assign","selector","state","props","args","length","eval","o","parts","split","forEach","_","i","a","code","slice","join","Child","changes","getState","obase","constructor","delta","setState","children"],"mappings":"uyBAqDgBA,Q,CAAAA,Q,SA2CAC,S,CAAAA,S,SAuBAC,Y,CAAAA,Y,CAvHhB,4B,2CAEA,qCACA,8B,gjCAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgDO,QAASF,SAAT,CAAkBG,KAAlB,CAAuD,IAA9BC,KAA8B,2DAAvB,EAAuB,IAAnBC,SAAmB,2DAAR,MAAQ,CAC5D,MAAO,UAACC,KAAD,CAAW,CAChB,GAAIC,QAASL,aAAaI,KAAb,CAAoBH,KAApB,CAAb,CAEAI,OAAOC,OAAOC,GAAP,CAAW,YAAX,CAAP,EAAmCL,IAAnC,CAEAM,OAAOC,MAAP,CAAcJ,MAAd,CAAsB,CACpB,GAAIK,SAAJ,EAAe,CACb,MAAO,UAACC,KAAD,CAAQC,KAAR,CAA2B,+BAATC,IAAS,iDAATA,IAAS,yBAChC,GAAIT,MAAMM,QAAV,CAAoB,CAClB,MAAON,OAAMM,QAAN,cAAeC,KAAf,CAAsBC,KAAtB,SAAgCC,IAAhC,EACR,CAFD,IAGK,CACH,GAAI,CAACX,KAAKY,MAAV,CAAkB,CAChB,MAAOH,MACR,CAED;AACA,MAAOI,gBAAeb,IAAf,KACR,CACF,CACF,CAfmB,CAAtB,EAkBA,MAAO,uBACL,UAAa,CAAE,0BAAUC,QAAV,CAAqBE,OAAOK,QAAP,wBAArB,CAAiD,CAD3D,EAELL,MAFK,CAGR,CACF,CAED;;;;;;;;;;;;GAaO,QAASN,UAAT,CAAmBG,IAAnB,CAAiC,IAARc,EAAQ,2DAAJ,EAAI,CACtC,GAAIC,OAAQ,CAACf,MAAQ,EAAT,EAAagB,KAAb,CAAmB,GAAnB,CAAZ,CAEAD,MAAME,OAAN,CAAc,SAACC,CAAD,CAAGC,CAAH,CAAKC,CAAL,CAAW,CACvB,GAAIC,YAAaD,EAAEE,KAAF,CAAQ,CAAR,CAAWH,EAAI,CAAf,EAAkBI,IAAlB,CAAuB,GAAvB,CAAb,SAAJ,CAEA;AACA,MAAOV,MAAKQ,IAAL,CACR,CALD,EAMA,MAAOP,EACR,CAED;;;;;;;;;;GAWO,QAAShB,aAAT,CAAsB0B,KAAtB,CAA6BzB,KAA7B,CAAoC,CACzC,oYACW,iBACP,MACE,+BAAC,KAAD,aACM,KAAKW,KADX,CAEM,KAAKD,KAFX,EAGE,YAAa,qBAACgB,OAAD,CAAa,CACxB,GAAIhB,OAAQ,OAAKC,KAAL,CAAWX,KAAX,CAAiB2B,QAAjB,EAAZ,CACA,GAAIC,OAAQ9B,UAAU,OAAK+B,WAAL,CAAiBxB,OAAOC,GAAP,CAAW,YAAX,CAAjB,CAAV,CAAZ,CACA,GAAIwB,aAAJ,CAEAvB,OAAOC,MAAP,CAAc,OAAKqB,WAAL,CAAiBpB,QAAjB,CAA0BmB,KAA1B,CAAd,CAAgDF,OAAhD,EACAI,MAAQ,kBAAM,EAAN,CAAUpB,KAAV,CAAiBkB,KAAjB,CAAR,CAEA5B,MAAM+B,QAAN,CAAeD,KAAf,CACD,CAZH,GAaE,KAAKnB,KAAL,CAAWqB,QAbb,CAeH,CAlBH,uDAoBD,C,gBAEc,CACbnC,iBADa,CAEbC,mBAFa,CAGbC,yBAHa,C","file":"rzero-tools.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'redux-zero'\nimport { merge } from 'lodash'\n\n/**\n * The decorator specifies the path to the portion of a given store using\n * dot notation. Currently it does not support that value being anything\n * other than a object. Values within the object in question can be of\n * any type.\n *\n * The object referenced in the store will be injected as a prop into the\n * component being wrapped. By default this prop will have the name \"page\" but\n * if another property name is preferred, it can be specified as a second\n * parameter.\n *\n * Example:\n * ```\n * import React, { Component } from 'react'\n * import { UseStore } from 'rzero-tools'\n * import { createStore } from 'redux-zero'\n *\n * const store = createStore({\n *   pages: {\n *     home: {\n *       name: \"Example Home Page Title\"\n *     }\n *   }\n * })\n *\n * @UseStore(store, 'pages.home')\n * export class Home extends Component {\n *   render() {\n *     let { page } = this.props\n *\n *     return (\n *       <div>{page.name}</div>\n *     )\n *   }\n * }\n *\n * export default Home\n * ```\n *\n * @export\n * @param {Object} store a data store created with `createStore` imported from\n * 'redux-zero'\n * @param {string} [path=''] a dot separated notation, all of which should be\n * nested objects\n * @param {string} [propName='page'] an optional, alternate, property name\n * under which the portion of the state should be exposed.\n * @returns\n */\nexport function UseStore(store, path = '', propName = 'page') {\n  return (Class) => {\n    let _Class = RZeroWrapper(Class, store)\n\n    _Class[Symbol.for('state.path')] = path\n\n    Object.assign(_Class, {\n      get selector() {\n        return (state, props, ...args) => {\n          if (Class.selector) {\n            return Class.selector(state, props, ...args)\n          }\n          else {\n            if (!path.length) {\n              return state;\n            }\n\n            // eslint-disable-next-line\n            return eval(`(state.${path})`)\n          }\n        }\n      }\n    })\n\n    return connect(\n      (...args) => { return { [propName]: _Class.selector(...args) } }\n    )(_Class)\n  }\n}\n\n/**\n * Given a string path, it creates a new object with the appropriate nested\n * structures indicated by the path string.\n *\n * @export\n * @param {any} path a path of \"some.thing\" would create an object like\n * `{some: { thing: {}}}`\n * @param {any} [o={}] by default the object with the new structures is a\n * new object literal, but if another object is provide, the structures are\n * added to the supplied object instead\n * @returns {Object} either a new object with the new structures supplied or\n * the supplied object that was modified\n */\nexport function buildBase(path, o = {}) {\n  let parts = (path || '').split('.');\n\n  parts.forEach((_,i,a) => {\n    let code = `(o.${a.slice(0, i + 1).join('.')} = {})`\n\n    // eslint-disable-next-line\n    return eval(code)\n  });\n  return o;\n}\n\n/**\n * A high order component (HOC) wrapper that receives an `updateState()` prop\n * function and the portion of the store as specified by the `path` variable\n * supplied in the decorator.\n *\n * @export\n * @param {Function} Child the class that should be wrapped\n * @param {Object} store a store created by `redux-zero`'s `createStore`\n * method\n * @returns {class<RZeroWrapper>} the class that renders whats inside\n */\nexport function RZeroWrapper(Child, store) {\n  return class WrappedReactZeroComponent extends Component {\n    render() {\n      return (\n        <Child\n          {...this.props}\n          {...this.state}\n          updateState={(changes) => {\n            let state = this.props.store.getState();\n            let obase = buildBase(this.constructor[Symbol.for('state.path')])\n            let delta;\n\n            Object.assign(this.constructor.selector(obase), changes);\n            delta = merge({}, state, obase)\n\n            store.setState(delta)\n          }}\n        >{this.props.children}</Child>\n      )\n    }\n  }\n}\n\nexport default {\n  UseStore,\n  buildBase,\n  RZeroWrapper\n}\n"]}